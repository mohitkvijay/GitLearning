	1. Configuration
		a. Git config --list
		b. Git config --get-all user.name
		c. Git config --global user.name "Mohit Vijay"
		d. Git config --global user.email "mohit.vijay@gmail.com"
		e. Git config user.name

	2. Work with repository
		a. Go into working directory first
		b. Git init 
		c. To delete repository from git, just delete .git directory and it will remove all information and association related to git
		d. Head will always represent latest commit
		e. Work with Files
			i. Git status to check status of files (Added, deleted, modified etcâ€¦). Can be done anytime to check status
			ii. Git add . (because of . All files in the directory will add to git - not commit and pushed)
			iii. Git commit -m "<Message>"
			iv. After this, if file get modify, we have to repeat from step i. or ii. 
			v. Git commit -a or git commit --all (with stage, directly commit into repository)
	3. Commit Message Best Practice
		a. A short single line summary (Less than 50 characters)
		b. You can add discerption followed by blank line (each line less than 72 characters)
		c. Write commit message in Present tense
		d. To check all commits use git log
		e. To limit number of logs use git log -n 5
		f. To search in all commit messages git log --grep="<Text>", its case sensitive
	4. Difference Between two commits
<<<<<<< HEAD
		a. Git diff (Without doing git add . - it check modified local files)
		b. Git status -v (After adding that file onto stage by git add .)
		c. Git diff --staged (shows only changes in staging area)
		d. Git diff --color-words
		e. Git show <commitHash>
		f. Git diff <oldcommit>..<newcommit>
		g. Git diff <oldcommit>..<newcommit> --color-words 
	5. Delete file from git repo
		a. Git rm <FileName> and it will add this change to stage
	6. Rename or Move a file
		a. If file renamed via OS, in that case
			i. Git add <NewFileName>
			ii. Git fm <OldFileName>
		b. With the help of above comments, it will show the same file as renamed in stage
		c. Instead of OS, directly using git
			i. Git mv <SourceFile> <DestinationFile> and it will go to stage directly.
	7. Push to Repository
		a. git remote add <name> <url>
		b. Git push <name>
        c. git push --set-upstream <name>I master
=======
        a. Git diff
        b. git status -v
<<<<<<< HEAD
        c. Test
>>>>>>> parent of 31eef22... commit all changes in repo
=======
        c. Test
>>>>>>> parent of 31eef22... commit all changes in repo
